/* Visit https://aka.ms/tsconfig.json to read more about this file */
{
  "compilerOptions": {
    "target": "ES2022",                       /* Specify ECMAScript target version */
    "module": "NodeNext",                     /* Specify module code generation */
    "lib": [                                  /* Specify library files to be included in the compilation. */
      "ESNext",
      "DOM"
    ],
    "declaration": true,                      /* Generates corresponding '.d.ts' file. */
    "declarationMap": true,                   /* Generates a sourcemap for each corresponding '.d.ts' file. */
    "sourceMap": true,                        /* Generates corresponding '.map' file. */
    "composite": true,                        /* Enable project compilation */

    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */
    "strictPropertyInitialization": false,    /* Enable strict checking of property initialization in classes. */

    /* Additional Checks */
    "noUnusedLocals": true,                   /* Report errors on unused locals. */
    "noImplicitReturns": true,                /* Report error when not all code paths in function return a value. */
    "noImplicitOverride": true,               /* Report error when a method is overridden without the `override` keyword. */

    /* Module Resolution Options */
    "moduleResolution": "nodenext",           /* Specify module resolution strategy */
    "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "resolveJsonModule": true,                /* Allows importing modules with a .json extension, which is a common practice in node projects. */
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

    /* Advanced Options */
    "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */

    /* Experimental Options */
    "experimentalDecorators": true,            /* Enables experimental support for ES7 decorators. */
    "skipLibCheck": true,                      /* Skip type checking of declaration files. */
    "moduleDetection": "force"                 /* This setting controls how TypeScript determines whether a file is a script or a module. */
  },
  "include": [
     "**/src/**/*",
     "**/test/**/*"
  ],
  "exclude": [
     "**/lib/**/*",
     "**/out/**/*",
     "**/node_modules/**/*"
  ]
}
